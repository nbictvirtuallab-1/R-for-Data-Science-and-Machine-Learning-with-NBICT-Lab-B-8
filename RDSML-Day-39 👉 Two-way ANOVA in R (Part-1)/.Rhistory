theme_minimal()
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "count",fill = "steelblue") +
geom_text(aes (label = len), vjust = 1.6, size = 3, color = "white") +
theme_minimal()
identity
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity",fill = "steelblue") +
geom_text(aes (label = len), vjust = 1.6, size = 3, color = "white") +
theme_minimal()
ggplot(data = mycardata, aes(x = factor(cyl))) +
geom_bar(stat = "identity", width = 0.7, fill = "steelblue") +
theme_minimal()
ggplot(data = mycardata, aes(x = factor(cyl))) +
geom_bar(stat = "count", width = 0.7, fill = "steelblue") +
theme_minimal()
dataset = data.frame(dose = c("D0.5", "D1", "D2"),
len = c(4.2, 10, 29.5))
library(ggplot2)
# Basic barplot
ggplot(data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity")
# Horizontal barplot
ggplot(data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity") +
coord_flip()
# Changing the width of bars
ggplot(data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity", width = .5)
# Changing colors
ggplot(data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity", color = "blue", fill = "white", width = .5)
# Minimal theme with blue fill color
ggplot(data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity", fill = "steelblue") +
theme_minimal()
# Barplot with labels
# Outeside bars
ggplot(data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = len), vjust = -0.5, size = 3, color = "#9F9F9F") +
theme_minimal()
# Inside bars
ggplot(data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = len), vjust = 1.6, size = 3, color = "white") +
theme_minimal()
myCarData = mtcars
# Barplot of counts
# To make a barplot of counts, we will use mtcars dataset
ggplot(data = myCarData, aes(x = factor(cyl))) +
geom_bar(stat = "count", width = 0.7, fill = "steelblue") +
theme_minimal()
print(dataset)
ggplot(dataset, aes(x = dose, y = len, color = dose)) +
geom_bar(stat = "identity", fill = "white")
print(dataset)
View(dataset)
ggplot(dataset, aes(x = dose, y = len, color = len)) +
geom_bar(stat = "identity", fill = "white")
ggplot(dataset, aes(x = dose, y = len, color = dose)) +
geom_bar(stat = "identity", fill = "white")
ggplot(dataset, aes(x = dose, y = len, color = dose)) +
geom_bar(stat = "identity", fill = "white")
ggplot(dataset, aes(x = dose, y = len, color = dose)) +
geom_bar(stat = "identity", fill = "white") +
scale_color_manual(values = c("#3826bf", "#bf264f", "#5ebf26"))
geom_bar(stat = "identity", fill = c("white", "red", "green") +
ggplot(dataset, aes(x = dose, y = len, color = dose)) +
geom_bar(stat = "identity", fill = c("white", "red", "green") +
scale_color_manual(values = c("#3826bf", "#bf264f", "#5ebf26"))
geom_bar(stat = "identity", fill = ("white", "red", "green") +
geom_bar(stat = "identity", fill = c("white", "red", "green") +
#Using custom color palettes
ggplot(dataset, aes(x = dose, y = len, color = dose)) +
geom_bar(stat = "identity", fill = "white") +
scale_color_manual(values = c("#3826bf", "#bf264f", "#5ebf26"))
ggplot(dataset, aes(x = dose, y = len, color = dose)) +
geom_bar(stat = "identity", fill = "white" +
#Using custom color palettes
ggplot(dataset, aes(x = dose, y = len, color = dose)) +
geom_bar(stat = "identity", fill = "white") +
scale_color_manual(values = c("#3826bf", "#bf264f", "#5ebf26"))
#Using custom color palettes
ggplot(dataset, aes(x = dose, y = len, color = dose)) +
#Using custom color palettes
ggplot(dataset, aes(x = dose, y = len, color = dose)) +
geom_bar(stat = "identity", fill = "white") +
scale_color_manual(values = c("#3826bf", "#bf264f", "#5ebf26"))
geom_bar(stat = "identity", fill = values = c("#3826bf", "#bf264f", "#5ebf26") +
#Using custom color palettes
ggplot(dataset, aes(x = dose, y = len, color = dose)) +
geom_bar(stat = "identity", fill = "white") +
scale_color_manual(values = c("#3826bf", "#bf264f", "#5ebf26"))
#Using custom color palettes
ggplot(dataset, aes(x = dose, y = len, color = dose)) +
geom_bar(stat = "identity", fill = "white") +
scale_color_manual(values = c("blue", "orange", "#5ebf26"))
#Using custom color palettes
ggplot(dataset, aes(x = dose, y = len, color = dose)) +
geom_bar(stat = "identity", fill = "white") +
scale_color_manual(values = c("blue", "orange", "yellow"))
# Importing the dataset
tooth_data = ToothGrowth
View(tooth_data)
View(tooth_data)
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]]), sd = sd(x[[col]]))
}
all_summary = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(all_summary, c("mean" = varname))
return(data_sum)
}
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
# Standard deviation of the mean as error bar with explanation
library(ggplot2)
ggplot(d_summary, aes(x = dose, y = len, fill = supp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(.9)) +
library(ggplot2)
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]]), sd = sd(x[[col]]))
}
all_summary = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(all_summary, c("mean" = varname))
return(data_sum)
}
ggplot(d_summary, aes(x = dose, y = len, fill = supp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(.9)) +
theme_minimal()
ggplot(d_summary, aes(x = dose, y = len)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(.9)) +
theme_minimal()
# Standard deviation of the mean as error bar with explanation
library(ggplot2)
ggplot(d_summary, aes(x = dose, y = len, fill = supp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(.9)) +
theme_minimal()
ggplot(d_summary, aes(x = dose, y = len, fill = supp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(1)) +
theme_minimal()
ggplot(d_summary, aes(x = dose, y = len, fill = supp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(.5)) +
theme_minimal()
ggplot(d_summary, aes(x = dose, y = len, fill = supp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(.4)) +
theme_minimal()
ggplot(d_summary, aes(x = dose, y = len, fill = supp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(.5)) +
theme_minimal()
# Loading the dataset
myData = ToothGrowth
# Converting the variable dose from a numeric to a factor variable
myData$dose = as.factor(myData$dose)
library(ggplot2)
class(dose)
# Converting the variable dose from a numeric to a factor variable
myData$dose = as.factor(myData$dose)
class(dose)
# Basic boxplot
ggplot(myData, aes(x = dose, y = len)) +
geom_boxplot()
# Rotating the box plot
ggplot(myData, aes(x = dose, y = len)) +
geom_boxplot() +
coord_flip()
ggplot(myData, aes(x = dose, y = len)) +
geom_boxplot(notch = T)
# Notched box plot
ggplot(myData, aes(x = dose, y = len)) +
geom_boxplot(notch = T)+
coord_flip()
# Changing outlier color, shape, and size
ggplot(myData, aes(x = dose, y = len)) +
geom_boxplot(outlier.color = "red", outlier.shape = 8,
outlier.size = 3)
ggplot(myData, aes(x = dose, y = len)) +
geom_boxplot(outlier.color = "red", outlier.shape = 8,
outlier.size = 3) +
scale_x_discrete(limits = c("2"))
# Changing box plot line colors by groups
ggplot(myData, aes(x = dose, y = len, color = dose)) +
geom_boxplot()
# Changing the item order
ggplot(myData, aes(x = dose, y = len, color = dose)) +
geom_boxplot() +
scale_x_discrete(limit = c("2", "0.5", "1"))
dataset = ToothGrowth
View(dataset)
# Importing the dataset
tooth_data = ToothGrowth
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]]), sd = sd(x[[col]]))
}
all_summary = ddply(data, groupnames, .fun = summary_func, varname)
summary_func = function(x, col){
c(mean = mean(x[[col]]), sd = sd(x[[col]]))
}
all_summary = ddply(data, groupnames, .fun = summary_func, varname)
# Importing the dataset
tooth_data = ToothGrowth
# Creating a function for summarizing the data
# based on the grouping variables
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]]), sd = sd(x[[col]]))
}
all_summary = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(all_summary, c("mean" = varname))
return(data_sum)
}
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
# Converting 'dose' to a factor variable
d_summary$dose = as.factor(d_summary$dose)
# Standard deviation of the mean as error bar with explanation
library(ggplot2)
ggplot(d_summary, aes(x = dose, y = len, fill = supp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(.9)) +
theme_minimal()
# Importing the dataset
tooth_data = ToothGrowth
View(tooth_data)
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]]), sd = sd(x[[col]]))
}
all_summary = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(all_summary, c("mean" = varname))
return(data_sum)
}
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
View(data_summary)
View(tooth_data)
View(d_summary)
sum(a+b)
sum(a,b)
a = 5
b = 8
sum(a+b)
summarise(a + b)
summarise(c)
c = sum(a+b)
summarise(c)
summarise(a,b)
summarise(4,7,9,8)
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]]), sd = sd(x[[col]]))
}
all_summary = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(all_summary, c("mean" = varname))
return(data_sum)
}
# Importing the dataset
tooth_data = ToothGrowth
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]]), sd = sd(x[[col]]))
}
all_summary = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(all_summary, c("mean" = varname))
return(all_summary)
}
View(data_summary)
View(tooth_data)
View(data_summary)
View(tooth_data)
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
View(data_summary)
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
# Converting 'dose' to a factor variable
d_summary$dose = as.factor(d_summary$dose)
# Standard deviation of the mean as error bar with explanation
library(ggplot2)
ggplot(d_summary, aes(x = dose, y = len, fill = supp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(.9)) +
theme_minimal()
library(ggplot2)
ggplot(d_summary, aes(x = dose, y = len, fill = supp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(.9)) +
theme_minimal()
ggplot(d_summary, aes(x = dose, y = len, fill = supp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(.9)) +
theme_minimal()
ggplot(d_summary, aes(x = dose, y = len, fill = supp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(.9)) +
theme_minimal()
tooth_data = ToothGrowth
# Creating a function for summarizing the data
# based on the grouping variables
data_summary = function(data, varname, groupnames){
require(plyr)
summary_func = function(x, col){
c(mean = mean(x[[col]]), sd = sd(x[[col]]))
}
all_summary = ddply(data, groupnames, .fun = summary_func, varname)
data_sum = rename(all_summary, c("mean" = varname))
return(all_summary)
}
d_summary = data_summary(tooth_data, varname = "len", groupnames = c("supp", "dose"))
# Converting 'dose' to a factor variable
d_summary$dose = as.factor(d_summary$dose)
# Standard deviation of the mean as error bar with explanation
library(ggplot2)
ggplot(d_summary, aes(x = dose, y = len, fill = supp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(.9)) +
theme_minimal()
# Standard deviation of the mean as error bar with explanation
library(ggplot2)
ggplot(d_summary, aes(x = dose, y = len, fill = supp)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = len - sd, ymax = len + sd), width = 0.2, position = position_dodge(.9)) +
theme_minimal()
setwd("~/")
PlantGrowth = PlantGrowth
View(PlantGrowth)
library(dplyr)
stats = PlantGrowth %>%
group_by(group) %>%
summarise(
mean = mean(weight),
sd = sd(weight),
se = sd(weight)/ sqrt(n())
)
print(stats)
boxplot(weight ~ group,
data = PlantGrowth,
main = "PlantGrowth data",
ylab = "Dried weight of plants",
col = "lightgray"
)
library(ggpubr)
ggline(PlantGrowth,
x= "group",
y = "weight",
add = c("mean_se" , "jitter")
)
anova = aov(weight ~ group, data = PlantGrowth)
print(anova)
summary(anova)
shapiro.test(aov_res)
plot(anova,2)
aov_res = residuals(object = anova)
shapiro.test(aov_res)
kruskal.test(weight~group , data = PlantGrowth)
pairwise.wilcox.test(PlantGrowth$weight,PlantGrowth$group,
p.adjust.method = "BH")
View(stats)
library(tidyverse)
d = read.csv("cropdata.csv")
library(tidyverse)
d = read.csv("cropdata.csv")
ggplot(summarization, aes(irr , mean , group = fert))
setwd("G:/Class Works/R-for-Data-Science-and-Machine-Learning-with-NBICT-Lab-B-8/RDSML-Day-39 👉 Two-way ANOVA in R (Part-1)")
read.csv("cropdata.csv")
library(tidyverse)
summarization = d %>%
group_by(fert, irr) %>%
summarise(mean = mean(y), se = sd (y)/ sqrt(n()), .groups = "drop")
d = read.csv("cropdata.csv")
summarization = d %>%
group_by(fert, irr) %>%
summarise(mean = mean(y), se = sd (y)/ sqrt(n()), .groups = "drop")
View(d)
View(summarization)
ggplot(summarization, aes(irr , mean , group = fert))
ggplot(summarization, aes(irr , mean , group = fert)) +
geom_line()
ggplot(summarization, aes(irr , mean , group = fert)) +
geom_line() +
geom_point()
ggplot(summarization, aes(irr , mean , group = fert)) +
geom_line() +
geom_point( size = 2)
ggplot(summarization, aes(irr , mean , group = fert)) +
geom_line() +
geom_point( size = 2) +
geom_errorbar()
ggplot(summarization, aes(irr , mean , group = fert)) +
geom_line() +
geom_point( size = 2) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2)
facet_wrap(~ fert , nrow = 1)
library(ggplot2)
ggplot(summarization, aes(irr , mean , group = fert)) +
geom_line() +
geom_point( size = 2) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ fert , nrow = 1)
ggplot(summarization, aes(irr , mean , group = fert)) +
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ fert , nrow = 1) +
labs(x ="Irrigation", y = "Mean Yield",
title = "Interaction of Fertilizer vs Irrigation") +
theme_classic(base_size = 12)
ggplot(summarization, aes(irr , mean , group = fert)) +
geom_line() +
geom_point(size = 2) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ fert , nrow = 1) +
labs(x ="Irrigation", y = "Mean Yield",
title = "Interaction of Fertilizer vs Irrigation")
library(ggplot2)
ggplot(summarization, aes(irr , mean , group = fert)) +
geom_line() +
geom_point( size = 2) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ fert , nrow = 1)
ggplot(summarization, aes(irr , mean , group = fert)) +
geom_line() +
geom_point( size = 2) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ fert , nrow = 1) +
labs(x ="Irrigation", y = "Mean Yield",
title = "Interaction of Fertilizer vs Irrigation") )
ggplot(summarization, aes(irr , mean , group = fert)) +
geom_line() +
geom_point( size = 2) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ fert , nrow = 1) +
labs(x ="Irrigation", y = "Mean Yield",
title = "Interaction of Fertilizer vs Irrigation")
ggplot(summarization, aes(irr , mean , group = fert)) +
geom_line() +
geom_point( size = 2) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ fert , nrow = 1) +
labs(x ="Irrigation", y = "Mean Yield",
title = "Interaction of Fertilizer vs Irrigation") +
theme_classic()
ggplot(summarization, aes(irr , mean , group = fert)) +
geom_line() +
geom_point( size = 2) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ fert , nrow = 1) +
labs(x ="Irrigation", y = "Mean Yield",
title = "Interaction of Fertilizer vs Irrigation") +
theme_classic(base_size = 12)
ggplot(summarization, aes(irr , mean , group = fert, color = "red")) +
geom_line() +
geom_point( size = 2) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ fert , nrow = 1) +
labs(x ="Irrigation", y = "Mean Yield",
title = "Interaction of Fertilizer vs Irrigation") +
theme_classic(base_size = 12)
ggplot(summarization, aes(irr , mean , group = fert, color = "blue")) +
geom_line() +
geom_point( size = 2) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ fert , nrow = 1) +
labs(x ="Irrigation", y = "Mean Yield",
title = "Interaction of Fertilizer vs Irrigation") +
theme_classic(base_size = 12)
library(ggplot2)
ggplot(summarization, aes(irr , mean , group = fert, color = "blue")) +
geom_line() +
geom_point( size = 2) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ fert , nrow = 1) +
labs(x ="Irrigation", y = "Mean Yield",
title = "Interaction of Fertilizer vs Irrigation") +
theme_classic(base_size = 12)
ggplot(summarization, aes(irr , mean , group = fert, color = "green")) +
geom_line() +
geom_point( size = 2) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ fert , nrow = 1) +
labs(x ="Irrigation", y = "Mean Yield",
title = "Interaction of Fertilizer vs Irrigation") +
theme_classic(base_size = 12)
ggplot(summarization, aes(irr , mean , group = fert, color = "red")) +
geom_line() +
geom_point( size = 2) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ fert , nrow = 1) +
labs(x ="Irrigation", y = "Mean Yield",
title = "Interaction of Fertilizer vs Irrigation") +
theme_classic(base_size = 12)
ggplot(summarization, aes(irr , mean , group = fert, color = "green")) +
geom_line() +
geom_point( size = 2) +
geom_errorbar(aes(ymin = mean - se, ymax = mean + se), width = 0.2) +
facet_wrap(~ fert , nrow = 1) +
labs(x ="Irrigation", y = "Mean Yield",
title = "Interaction of Fertilizer vs Irrigation") +
theme_classic(base_size = 12)
