ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
plot + theme_minimal()
ggplot(dataset,aes(x=wt,y=mpg, colour = cyl)) +
geom_smooth(method = lm,se=FALSE)
library(ggplot2)
dataset = mtcars
View(dataset)
ggplot(datast)
ggplot(dataset)
ggplot(datast)
ggplot(datast, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 2, shape = 2)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 3, shape = 3)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 4, shape = 4)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 18, shape = 20)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 1)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = .5, shape = .5)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
geom_smooth()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
geom_smooth(method = lm)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
geom_smooth(method = lm, se = FALSE)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
geom_smooth()
#removing the confidence interval
ggplot(dataset,aes(x = mpg,y =wt)) +
geom_point()+
geom_smooth()
#removing the confidence interval
ggplot(dataset,aes(x = wt,y =wt)) +
geom_point()+
geom_smooth()
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = cyl)) +
geom_point()+
geom_smooth()
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth()
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth()
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth(se= FALSE)
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth(se= FALSE, method = lm)
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth(se= FALSE, method = lm,linetype="dashed")
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth( method = lm,linetype="dashed")
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth( method = lm,linetype="dashed", color= "blue")
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth( method = lm,linetype="dashed", color= "red")
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth( method = lm,linetype="dashed", color= "red", fill = "yeollow")
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth( method = lm,linetype="dashed", color= "red", fill = "yellow")
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth( method = lm,linetype="dashed", color= "red", fill = "orange")
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth( method = lm,linetype="dashed", color= "red", fill = "blue")
#changing the point shapes by using the levels of cylinder
dataset$qsec
#changing the point shapes by using the levels of cylinder
dataset$cyl
class
class(dataset$cyl)
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()+
geom_smooth( method = lm,linetype="dashed", color= "red", fill = "blue")
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()
dataset$cyl = as.factor(dataset$cyl)
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()
ggplot(dataset,aes(x = wt,y = mpg,shape = cyl color = cyl)) +
ggplot(dataset,aes(x = wt,y = mpg,shape = cyl, color = cyl)) +
geom_point()
ggplot(dataset,aes(x = wt,y = mpg,shape = cyl, color = cyl)) +
geom_point()
ggplot(dataset,aes(x = wt,y = mpg,size = cyl,shape = cyl, color = cyl)) +
geom_point()
ggplot(dataset,aes(x = wt,y = mpg,size = cyl, color = cyl)) +
geom_point()
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()
library(ggplot2)
dataset = mtcars
#generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
geom_smooth()
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth( method = lm,linetype="dashed", color= "red", fill = "blue")
#changing the point shapes by using the levels of cylinder
dataset$cyl = as.factor(dataset$cyl)
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()/
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()/
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geompoint()
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
dataset = data.frame(dose = c("D0.5","D1", "D2"),
len = c(4.2, 10, 29.5))
View(dataset)
geom_bar(stat = "identity")
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity")
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity")
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity")
library(ggplot2)
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity")
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity") +
coord_flip()
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity", width = 0.5)
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity",color = "red" width = 0.5)
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity",color = "red", width = 0.5)
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity",color = "red",fill = "white" width = 0.5)
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity",color = "red",fill = "white", width = 0.5)
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity",color = "blue",fill = "white", width = 0.5)
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity",fill = "steelblue") +
theme_minimal()
dataset = data.frame(dose = c("D0.5","D1", "D2"),
len = c(4.2, 10, 29.5))
#basic barplot
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity")
#horizontal bar plot
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity") +
coord_flip()
#changing the width of bar
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity", width = 0.5)
#changing color
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity",color = "blue",fill = "white", width = 0.5)
#Minimal theme with blue fill color
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity",fill = "steelblue") +
theme_minimal()
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity",fill = "steelblue") +
geom_text(aes (label = len)) +
theme_minimal()
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity",fill = "steelblue") +
geom_text(aes (label = len), vjust = - 0.5) +
theme_minimal()
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity",fill = "steelblue") +
geom_text(aes (label = len), vjust = - 0.5, size = 3.5) +
theme_minimal()
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity",fill = "steelblue") +
geom_text(aes (label = len), vjust = - 0.5, size = 2) +
theme_minimal()
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity",fill = "steelblue") +
geom_text(aes (label = len), vjust = - 0.5, size = 3) +
theme_minimal()
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity",fill = "steelblue") +
geom_text(aes (label = len), vjust = - 0.5, size = 3, color = "#999999") +
theme_minimal()
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity",fill = "steelblue") +
geom_text(aes (label = len), vjust = - 0.5, size = 3, color = "#9F9F9F") +
theme_minimal()
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity",fill = "steelblue") +
geom_text(aes (label = len), vjust = - 0.5, size = 3, color = "white") +
theme_minimal()
ggplot( data = dataset, aes(x = dose, y = len)) +
geom_bar(stat = "identity",fill = "steelblue") +
geom_text(aes (label = len), vjust = 1.6, size = 3, color = "white") +
theme_minimal()
mycardata = mtcars
View(mycardata)
View(mycardata)
#barplot of counts
#to make a barplot of counts,we use mtcars dataset
ggplot(data = mycardata, aes(x = factor()cyl)) +
#barplot of counts
#to make a barplot of counts,we use mtcars dataset
ggplot(data = mycardata, aes(x = factor()cyl)) +
ggplot(data = mycardata, aes(x = factor()cyl)) +
ggplot(data = myCarData, aes(x = factor(cyl))) +
geom_bar(stat = "count", width = 0.7, fill = "steelblue") +
theme_minimal()
ggplot(data = mycardata, aes(x = factor(cyl))) +
geom_bar(stat = "count", width = 0.7, fill = "steelblue") +
theme_minimal()
View(mycardata)
library(ggplot2)
dataset = mtcars
#Converting cyl column from a numeric to a factor variable
dataset$cyl = as.factor(dataset$cyl)
#Adding regression lines based on multiple groups
ggplot(dataset, aes(x=wt, y=mpg, colour = cyl)) +
geom_point() +
geom_smooth(method=lm)
#Removing the confidence intervals
ggplot(dataset,aes(x=wt,y=mpg, colour = cyl)) +
geom_smooth(method = lm,se=FALSE)
#Extending the regression lines
ggplot(dataset,aes(x=wt,y=mpg,colour = cyl)) +
geom_point() +
geom_smooth(method = lm, se=FALSE, fullrange = TRUE)
#filling the color of confidence bands
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,aes(fill= cyl))
#Changing point shapes manually
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
theme(legend.position = "top")
#Changing point colors manually
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
scale_color_manual(values = c("darkblue", "grey", "orange")) +
theme(legend.position = "top")
#Customizing scatter plots
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
scale_color_manual(values = c("darkblue", "grey", "orange")) +
labs(title = "Miles per gallon \naccording to the weight",
x= "weight", y = "Miles/Gallon") +
theme(legend.position = "top")
#Customizing themes
plot = ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
scale_color_manual(values = c("darkblue", "grey", "orange")) +
labs(title = "Miles per gallon \naccording to the weight",
x= "weight", y = "Miles/Gallon") +
theme(legend.position = "top")
plot + theme_classic()
plot + theme_minimal()
#Importing the dataset
dataset = read.csv("data.csv")
#Importing the dataset
dataset = read.csv("data.csv")
myPlot + scale_color_grey() + scale_fill_grey() +
theme_classic()
dataset = read.csv("data.csv")
setwd("G:/Class Works/R-for-Data-Science-and-Machine-Learning-with-NBICT-Lab-B-8/RDSML-DAY-14-Histogram-in-R-(part-2)")
dataset = read.csv("data.csv")
library(ggplot2)
ggplot(dataset, aes(x = weight)) +
geom_histogram(color = "white")
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 1, position = "identity")
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 1, position = "dodge") +
theme(legend.position = "top")
install.packages("plyr")
library(plyr)
group_means = ddply(dataset, "sex", summarise, grp.mean = mean(weight))
group_means
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 1, position = "dodge") +
geom_vline(data = group_means, aes( xintercept =grp.mean , color= sex),
linetype = "dashed") +
theme(legend.position = "top")
myPlot
myPlot + scale_color_manual(values = c("#999999", "#E69F00")) +
scale_fill_manual(values = c("#999999", "#E69F00"))
myPlot + scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
myPlot + scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
myPlot + scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
myPlot + scale_color_grey() + scale_fill_grey() +
theme_classic()
setwd("G:/Class Works/R-for-Data-Science-and-Machine-Learning-with-NBICT-Lab-B-8/RDSML-DAY-14-Histogram-in-R-(part-2)")
dataset = read.csv("data.csv")
library(ggplot2)
ggplot(dataset, aes(x = weight)) +
geom_histogram()
ggplot(dataset, aes(x = weight)) +
geom_histogram(color = "white")
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 1)
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 1, position = "identity")
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 1, position = "dodge")
ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 1, position = "stack")
group_means = ddply(dataset, "sex", summarise, grp.mean = mean(weight))
group_means
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 1, position = "dodge") +
geom_vline(data = group_means, aes( xintercept =grp.mean , color= sex),
linetype = "dashed") +
theme(legend.position = "top")
myPlot
myPlot = ggplot(dataset, aes(x = weight, fill = sex)) +
geom_histogram(color = "white", alpha = 1, position = "dodge") +
geom_vline(data = group_means, aes( xintercept =grp.mean , color= sex),
linetype = "dotted") +
theme(legend.position = "top")
myPlot
myPlot + scale_color_manual(values = c("#999999", "#E69F00")) +
scale_fill_manual(values = c("#999999", "#E69F00"))
myPlot + scale_color_brewer(palette = "Dark2") +
scale_fill_brewer(palette = "Dark2")
myPlot + scale_color_grey() + scale_fill_grey() +
theme_classic()
library(ggplot2)
dataset = mtcars
#Converting cyl column from a numeric to a factor variable
dataset$cyl = as.factor(dataset$cyl)
#Adding regression lines based on multiple groups
ggplot(dataset, aes(x=wt, y=mpg, colour = cyl)) +
geom_point() +
geom_smooth(method=lm)
#Removing the confidence intervals
ggplot(dataset,aes(x=wt,y=mpg, colour = cyl)) +
geom_smooth(method = lm,se=FALSE)
#Extending the regression lines
ggplot(dataset,aes(x=wt,y=mpg,colour = cyl)) +
geom_point() +
geom_smooth(method = lm, se=FALSE, fullrange = TRUE)
#filling the color of confidence bands
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,aes(fill= cyl))
#Changing point shapes manually
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
theme(legend.position = "top")
#Changing point colors manually
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
scale_color_manual(values = c("darkblue", "grey", "orange")) +
theme(legend.position = "top")
#Customizing scatter plots
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
scale_color_manual(values = c("darkblue", "grey", "orange")) +
labs(title = "Miles per gallon \naccording to the weight",
x= "weight", y = "Miles/Gallon") +
theme(legend.position = "top")
#Customizing themes
plot = ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
scale_color_manual(values = c("darkblue", "grey", "orange")) +
labs(title = "Miles per gallon \naccording to the weight",
x= "weight", y = "Miles/Gallon") +
theme(legend.position = "top")
plot + theme_classic()
plot + theme_minimal()
#Importing the dataset
#to import csv file we use read.csv function
dataset = read.csv("data.csv")
#importing the library
library(ggplot2)
#basic histogram using ggplot2
ggplot(dataset, aes(x = weight)) +
geom_histogram()
#changing the width of bin
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 1, color = "black")
#changing colors
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 1, color = "black", fill  = "lightblue")
#adding the mean line
myPlot= ggplot(dataset, aes(x = weight)) +
geom_histogram(color = "black", fill = "white")
myPlot + geom_vline( aes( xintercept = mean(weight)),
color = "blue", linetype = "dashed", size= 1)
#Histogram with density plot
ggplot(dataset, aes(x = weight)) +
geom_histogram(aes( y = after_stat(density)), color = "black", fill  = "white") +
geom_density( fill = "blue", alpha = .2)
# alpha is used to increase transparency
#density plot is a smooth version of a histogram
# changing bin color and fill color
ggplot(dataset, aes(x = weight)) +
geom_histogram( color = "darkblue", fill  = "lightblue")
ggplot(dataset, aes(x = weight)) +
geom_histogram()
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 1, color = "black")
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 1, color = "red")
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 1, color = "black", fill  = "lightblue")
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 1, color = "black")
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 1, color = "black", fill  = "lightblue")
myPlot= ggplot(dataset, aes(x = weight)) +
geom_histogram(color = "black", fill = "white")
myPlot= ggplot(dataset, aes(x = weight)) +
geom_histogram(color = "black", fill = "white")
myPlot= ggplot(dataset, aes(x = weight)) +
geom_histogram(color = "black", fill = "white")
myPlot + geom_vline( aes( xintercept = mean(weight)),
color = "blue", linetype = "dashed", size= 1)
ggplot(dataset, aes(x = weight)) +
geom_histogram(aes( y = after_stat(density)), color = "black", fill  = "white") +
geom_density( fill = "blue", alpha = .2)
ggplot(dataset, aes(x = weight)) +
geom_histogram(aes( y = after_stat(density)), color = "black", fill  = "white") +
geom_density( fill = "blue" )
ggplot(dataset, aes(x = weight)) +
geom_histogram(aes( y = after_stat(density)), color = "black", fill  = "white") +
geom_density( fill = "blue",alpha = .2 )
gplot(dataset, aes(x = weight)) +
geom_histogram( color = "darkblue", fill  = "lightblue")
ggplot(dataset, aes(x = weight)) +
geom_histogram( color = "darkblue", fill  = "lightblue")
View(myPlot)
