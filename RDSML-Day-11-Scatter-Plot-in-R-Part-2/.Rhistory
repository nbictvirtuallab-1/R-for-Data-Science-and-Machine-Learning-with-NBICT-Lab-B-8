#Updating the file
data=c(9,6,17,31,11)
x = mean(data)
summary(data)
z= x/2
z=
z
#Updating the file
data=c(9,6,17,31,11)
x = mean(data)
summary(data)
z= x/2
z
data_frame = (1:10)
print(data_frame)
data_frame = (1:10,2:20)
is.numeric(b)
b = c(23,56,89,34,67, "df")
is.numeric(b)
is.character(b)
is.logical(b)
class(b)
a =c(3, 4, 5, 6, 7)
class(a)
is.numeric(a)
is.character(a)
as.character(a)
class(a)
is.character(a)
class(a)
a= as.character(a)
class(a)
is.character(a)
b = c(23,56,89,34,67, "df")
is.numeric(b)
is.character(b)
is.logical(b)
class(b)
a =c(3, 4, 5, 6, 7)
class(a)
is.numeric(a)
is.character(a)
a= as.character(a)
class(a)
is.character(a)
d = (TRUE, FALSE, FALSE, TRUE, TRUE)
d = (TRUE, FALSE, FALSE, TRUE, TRUE)
d = c(TRUE, FALSE, FALSE, TRUE, TRUE)
d = as.numeric(d)
d
class(d)
d=as.logical(d)
d
e = as.logical(e)
e = c(1,0,0,1,0,23,-7,0)
e = as.logical(e)
e
my_seq = c(1:10)
my_seq
my_seq = c(1:100)
my_seq
my_seq = c(1:100)
my_seq
my_seq = c(1:50,10,20,56,87,90)
my_seq
new_seq = c(seq(1,10))
new_seq
new.seq = c(seq(1,20,by = 4))
new.seq = c(seq(1,20,by = 4))
new_seq
new.seq
names = c("refayet", "rokibul","rodela.apu", "ammu", "pappa")
names
class(names)
names[4]
names[4,5]
names[4:5]
names[4:1]
names[3:4]
my.values = c(3,4,6,7,8,9,45)
names(my.values) = c("a","b","c","y","i","u","U")
my.values
c
my.values[u]
my.values[U]
my.values = c(3,4,6,7,8,9,45)
names(my.values) = c("a","b","c","y","i","u","U")
my.values
my.values[U]
my.values = c(3,4,6,7,8,9,45)
names(my.values) = c("a","b","c","y","i","r","U")
my.values
my.values[U]
my.values[u]
my.values = c(3,4,6,7,8,9,45)
names(my.values) = c("a","b","c","y","i","r","u")
my.values
my.values[u]
my.values = c(3,4,6,7,8,9,45)
names(my.values) = c("a","b","c","y","i","r","u")
my.values
my.values[u]
my.values[a]
my.values [a]
my.values = c(3,4,6)
names(my.values) = c("a","b","c")
my.values
my.values [a]
my.values = c(3,4,6)
names(my.values) = c("a","b","c")
my.values
my.values ["a"]
names = c("refayet", "vaiya","rodela.apu", "ammu", "pappa")
names
class(names)
names[3:4]
my.values = c(3,4,6)
names(my.values) = c("a","b","c")
my.values
my.values ["a"]
remove.packages("psych")
install.packages("psych")
library(psych)
data()
AirPassengers
data(AirPassengers)
data(AirPassengers)
AirPassengers
data
data
data()
BJsales.lead (BJsales)
data
BJsales.lead (BJsales)
CO2
EuStockMarkets
AirPassengers
remove.packages("nycflights13")
install.packages("nycflights13")
library(nycflights13)
attach(nycflights13)
attach(nycflights13 :: airlines)
head(nycflights13)
head("nycflights13")
head(nycflights13 :: airlines)
library(psych)
data
data()
AirPassengers
BOD
attach(nycflights13::flights)
# Using the New York airport flight data
# install.packages("nycflights13")
library(nycflights13)
attach(nycflights13::flights)
# Using the New York airport flight data
# install.packages("nycflights13")
attach(nycflights13::flights)
# Lets look at the first 6 records using the head() function
head(nycflights13::flights)
distance
# Using the New York airport flight data
# install.packages("nycflights13")
attach(nycflights13::flights)
# Using the New York airport flight data
# install.packages("nycflights13")
attach(nycflights13::flights)
# Lets look at the first 6 records using the head() function
head(nycflights13::flights)
distance
summary(distance)
describe(distance)
demo = cbind(arr_delay, dep_delay, distance)
describe(demo)
#install.packages("ggplot2")
library(ggplot2)
dataset = mtcars
#Generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
#changing the point size and shape
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18)
#adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
#changing the point size and shape
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 2, shape = 2)
#adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 2, shape = 2) +
#changing the point size and shape
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 2, shape = 2)
aggregate(distance, by = list(carrier, month), FUN = sd, na.rm = TRUE)
data()
#Descriptive statistics using the psych package
install.packages("psych")
BOD
install.packages("nycflights13")
attach(nycflights13::flights)
head(nycflights13::flights)
head(nycflights13::flights)
summary(distance)
describe(distance)
describe(distance)
describe(dist)
describe(distance)
demo = cbind(arr_delay, dep_delay, distance)
describe(demo)
summary(distance)
describe(distance)
describe(demo)
summary(distance)
describe(distance)
library(psych)
describe(distance)
install.packages("psych")
library(psych)
library(psych)
data()
AirPassengers
BOD
install.packages("nycflights13")
attach(nycflights13::flights)
head(nycflights13::flights)
summary(distance)
describe(distance)
demo = cbind(arr_delay, dep_delay, distance)
describe(demo)
colnames(demo) = c('Arrival delay', 'Departure Delay', 'Distance Travelled')
describe(demo)
dep_delay
hist(dep_delay)
hist(distance)
hist(Arrival delay)
hist(arr_delay)
hist(dep_delay)
setwd("G:/Class Works/R-for-Data-Science-and-Machine-Learning-with-NBICT-Lab-B-8/RDSML-Day-11-Scatter-Plot-in-R-Part-2")
library(ggplot2)
dataset = mtcars
View(dataset)
View(demo)
View(df)
View(df3)
View(dataset)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
#Removing the confidence interval
ggplot(dataset,aes(x = wt, y = mpg)) =
geom_point() +
geom_smooth(method = lm, se = FALSE)
#Removing the confidence interval
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point() +
geom_smooth(method = lm, se = FALSE)
#Loess method
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point() +
geom_smooth()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed",
color = "darkred")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed",
color = "darkblue")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed",
color = "darkgreen")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed",
color = "darkyellow")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed",
color = "darkred")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dotted",
color = "darkred")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed",
color = "darkred")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed",
color = "darkred" , fill = "darkblue")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18) +
geom_smooth(method = lm, linetype = "dashed",
color = "darkred" , fill = "blue")
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size=1, shape=18, color = "red") +
geom_smooth(method = lm, linetype = "dashed",
color = "darkred" , fill = "blue")
dataset$cyl
class(dataset$cyl)
dataset$cyl = as.factor(dataset$cyl)
class (dataset$cyl)
#Changing the point shapes by the levels of cyl
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl,
size = cyl)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl, size = cyl)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl, size = cyl)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl,
size = cyl)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg, color = cyl,
size = cyl)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg,
size = cyl)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl
size = cyl)) +
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl, size = cyl)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl, size = cyl)) +
geom_point()
