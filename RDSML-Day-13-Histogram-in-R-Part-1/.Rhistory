scale_shape_manual(values=c(3,16,17)) +
theme(legend.position = "top")
#Changing point colors manually
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
scale_color_manual(values = c("darkblue", "grey", "orange")) +
theme(legend.position = "top")
#Customizing scatter plots
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
scale_color_manual(values = c("darkblue", "grey", "orange")) +
labs(title = "Miles per gallon \naccording to the weight",
x= "weight", y = "Miles/Gallon") +
theme(legend.position = "top")
#Customizing themes
plot = ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
scale_color_manual(values = c("darkblue", "grey", "orange")) +
labs(title = "Miles per gallon \naccording to the weight",
x= "weight", y = "Miles/Gallon") +
theme(legend.position = "top")
plot + theme_classic()
plot + theme_minimal()
version
library(ggplot2)
dataset = mtcars
#converting cyl column from numeric to a factor variable
dataset$cyl = as.factor(dataset$cyl)
#adding regression lines based on multiple groups
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm)
#removing the confience interval
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm, se = FALSE)
#extending the regression lines
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm, se = FALSE, fullrange = TRUE)
#filling the color of confidence bands
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,aes(fill= cyl))
#Changing point shapes manually
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
theme(legend.position = "top")
#Changing point colors manually
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
scale_color_manual(values = c("darkblue", "grey", "orange")) +
theme(legend.position = "top")
#Customizing scatter plots
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
scale_color_manual(values = c("darkblue", "grey", "orange")) +
labs(title = "Miles per gallon \naccording to the weight",
x= "weight", y = "Miles/Gallon") +
theme(legend.position = "top")
#Customizing themes
plot = ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
scale_color_manual(values = c("darkblue", "grey", "orange")) +
labs(title = "Miles per gallon \naccording to the weight",
x= "weight", y = "Miles/Gallon") +
theme(legend.position = "top")
plot + theme_classic()
plot + theme_minimal()
library(ggplot2)
dataset = mtcars
#converting cyl column from numeric to a factor variable
dataset$cyl = as.factor(dataset$cyl)
#adding regression lines based on multiple groups
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm)
#removing the confience interval
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm, se = FALSE)
#extending the regression lines
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm, se = FALSE, fullrange = TRUE)
#filling the color of confidence bands
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,aes(fill= cyl))
#Changing point shapes manually
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
theme(legend.position = "top")
#Changing point colors manually
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
scale_color_manual(values = c("darkblue", "grey", "orange")) +
theme(legend.position = "top")
#Customizing scatter plots
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
scale_color_manual(values = c("darkblue", "grey", "orange")) +
labs(title = "Miles per gallon \naccording to the weight",
x= "weight", y = "Miles/Gallon") +
theme(legend.position = "top")
#Customizing themes
plot = ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
scale_color_manual(values = c("darkblue", "grey", "orange")) +
labs(title = "Miles per gallon \naccording to the weight",
x= "weight", y = "Miles/Gallon") +
theme(legend.position = "top")
plot + theme_classic()
plot + theme_minimal()
plot + theme_minimal(),
plot + theme_minimal()
x <- 1:100
x
x -> 1:100
x <- 1:100
print(x)
x
x
x[79]
print(x[79])
print(x[78]
print(x[78]
print(x[78])
lm
lm()
dataset
dataset
dataset
mtcars
mtcars
library(ggplot2)
dataset = mtcars
#Converting cyl column from a numeric to a factor variable
dataset$cyl = as.factor(dataset$cyl)
#Adding regression lines based on multiple groups
ggplot(dataset, aes(x=wt, y=mpg, colour = cyl)) +
geom_point() +
geom_smooth(method=lm)
#Removing the confidence intervals
ggplot(dataset,aes(x=wt,y=mpg, colour = cyl)) +
geom_smooth(method = lm,se=FALSE)
#Extending the regression lines
ggplot(dataset,aes(x=wt,y=mpg,colour = cyl)) +
geom_point() +
geom_smooth(method = lm, se=FALSE, fullrange = TRUE)
#filling the color of confidence bands
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,aes(fill= cyl))
#Changing point shapes manually
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
theme(legend.position = "top")
#Changing point colors manually
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
scale_color_manual(values = c("darkblue", "grey", "orange")) +
theme(legend.position = "top")
#Customizing scatter plots
ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
scale_color_manual(values = c("darkblue", "grey", "orange")) +
labs(title = "Miles per gallon \naccording to the weight",
x= "weight", y = "Miles/Gallon") +
theme(legend.position = "top")
#Customizing themes
plot = ggplot(dataset, aes( x = wt, y = mpg, color = cyl, shape = cyl) ) +
geom_point() +
geom_smooth(method = lm,se= FALSE, fullrange = TRUE) +
scale_shape_manual(values=c(3,16,17)) +
scale_color_manual(values = c("darkblue", "grey", "orange")) +
labs(title = "Miles per gallon \naccording to the weight",
x= "weight", y = "Miles/Gallon") +
theme(legend.position = "top")
plot + theme_classic()
plot + theme_minimal()
#install.packages("ggplot2")
library(ggplot2)
dataset = mtcars
View(dataset)
View(dataset)
View(dataset)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18)
#adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
#adding the regression line
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
plot + theme_minimal()
ggplot(dataset,aes(x=wt,y=mpg, colour = cyl)) +
geom_smooth(method = lm,se=FALSE)
library(ggplot2)
dataset = mtcars
View(dataset)
ggplot(datast)
ggplot(dataset)
ggplot(datast)
ggplot(datast, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 2, shape = 2)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 3, shape = 3)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 4, shape = 4)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 18, shape = 20)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 1)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = .5, shape = .5)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
geom_smooth()
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
geom_smooth(method = lm)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
geom_smooth(method = lm, se = FALSE)
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
geom_smooth()
#removing the confidence interval
ggplot(dataset,aes(x = mpg,y =wt)) +
geom_point()+
geom_smooth()
#removing the confidence interval
ggplot(dataset,aes(x = wt,y =wt)) +
geom_point()+
geom_smooth()
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = cyl)) +
geom_point()+
geom_smooth()
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth()
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth()
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth(se= FALSE)
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth(se= FALSE, method = lm)
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth(se= FALSE, method = lm,linetype="dashed")
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth( method = lm,linetype="dashed")
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth( method = lm,linetype="dashed", color= "blue")
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth( method = lm,linetype="dashed", color= "red")
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth( method = lm,linetype="dashed", color= "red", fill = "yeollow")
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth( method = lm,linetype="dashed", color= "red", fill = "yellow")
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth( method = lm,linetype="dashed", color= "red", fill = "orange")
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth( method = lm,linetype="dashed", color= "red", fill = "blue")
#changing the point shapes by using the levels of cylinder
dataset$qsec
#changing the point shapes by using the levels of cylinder
dataset$cyl
class
class(dataset$cyl)
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()+
geom_smooth( method = lm,linetype="dashed", color= "red", fill = "blue")
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()
dataset$cyl = as.factor(dataset$cyl)
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()
ggplot(dataset,aes(x = wt,y = mpg,shape = cyl color = cyl)) +
ggplot(dataset,aes(x = wt,y = mpg,shape = cyl, color = cyl)) +
geom_point()
ggplot(dataset,aes(x = wt,y = mpg,shape = cyl, color = cyl)) +
geom_point()
ggplot(dataset,aes(x = wt,y = mpg,size = cyl,shape = cyl, color = cyl)) +
geom_point()
ggplot(dataset,aes(x = wt,y = mpg,size = cyl, color = cyl)) +
geom_point()
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()
library(ggplot2)
dataset = mtcars
#generating a basic scatter plot
ggplot(dataset, aes(x = wt, y = mpg)) +
geom_point(size = 1, shape = 18) +
geom_smooth()
#removing the confidence interval
ggplot(dataset,aes(x = wt,y = mpg)) +
geom_point()+
geom_smooth( method = lm,linetype="dashed", color= "red", fill = "blue")
#changing the point shapes by using the levels of cylinder
dataset$cyl = as.factor(dataset$cyl)
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()/
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()/
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geompoint()
ggplot(dataset,aes(x = wt,y = mpg, color = cyl)) +
geom_point()
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
View(dataset)
setwd("G:/Class Works/R-for-Data-Science-and-Machine-Learning-with-NBICT-Lab-B-8/RDSML-Day-13-Histogram-in-R-Part-1")
#Importing the dataset
#to import csv file we use read.csv function
dataset = read.csv("data.csv")
#importing the library
library(ggplot2)
#basic histogram using ggplot2
ggplot(dataset, aes(x = weight)) +
geom_histogram()
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 2)
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 2, color = "black")
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 2, color = "red")
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 2, color = "ash")
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 2, color = "green")
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 2, color = "black")
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 1, color = "black")
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 1, color = "black", fill = "red")
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 1, color = "black", fill = "blue")
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 1, color = "black", fill = "lightblue")
myplot= ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 1, color = "black", fill = "lightblue")
myPlot
myPlot= ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 1, color = "black", fill = "lightblue")
myPlot
myPlot= ggplot(dataset, aes(x = weight)) +
geom_histogram(color = "black", fill = "lightblue")
myPlot= ggplot(dataset, aes(x = weight)) +
geom_histogram(color = "black", fill = "lightblue")
myPlot
myPlot + geom_vline( aes( xintercept = mean(weight)),
color = "blue")
myPlot= ggplot(dataset, aes(x = weight)) +
geom_histogram(color = "black", fill = "red")
myPlot + geom_vline( aes( xintercept = mean(weight)),
color = "blue")
myPlot= ggplot(dataset, aes(x = weight)) +
geom_histogram(color = "black", fill = "white")
myPlot + geom_vline( aes( xintercept = mean(weight)),
color = "blue")
myPlot + geom_vline( aes( xintercept = mean(weight)),
color = "blue", linetype = "dashed")
myPlot + geom_vline( aes( xintercept = mean(weight)),
color = "blue", linetype = "dashed", size = 1)
myPlot + geom_vline( aes( xintercept = mean(weight)),
color = "blue", linetype = "dashed", size= 1)
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 1, color = "black")
ggplot(dataset, aes(x = weight)) +
geom_histogram(binwidth = 1, color = "black", fill  = "lightblue")
#adding the mean line
myPlot= ggplot(dataset, aes(x = weight)) +
geom_histogram(color = "black", fill = "white")
myPlot + geom_vline( aes( xintercept = mean(weight)),
color = "blue", linetype = "dashed", size= 1)
geom_density()
ggplot(dataset, aes(x = weight)) +
geom_histogram(aes( y = after_stat(density)), color = "black", fill  = "white"+
geom_density()
ggplot(dataset, aes(x = weight)) +
geom_density()
geom_density()
ggplot(dataset, aes(x = weight)) +
geom_histogram(aes( y = after_stat(density)), color = "black", fill  = "white") +
geom_density()
ggplot(dataset, aes(x = weight)) +
geom_histogram(aes( y = after_stat(density)), color = "black", fill  = "blue") +
geom_density()
ggplot(dataset, aes(x = weight)) +
geom_histogram(aes( y = after_stat(density)), color = "black", fill  = "blue") +
geom_densired
ggplot(dataset, aes(x = weight)) +
geom_histogram(aes( y = after_stat(density)), color = "black", fill  = "red") +
geom_density()
ggplot(dataset, aes(x = weight)) +
geom_histogram(aes( y = after_stat(density)), color = "black", fill  = "orange") +
geom_density()
ggplot(dataset, aes(x = weight)) +
geom_histogram(aes( y = after_stat(density)), color = "black", fill  = "pink") +
geom_density()
ggplot(dataset, aes(x = weight)) +
geom_histogram(aes( y = after_stat(density)), color = "black", fill  = "black") +
geom_density()
ggplot(dataset, aes(x = weight)) +
geom_histogram(aes( y = after_stat(density)), color = "white", fill  = "black") +
geom_density()
ggplot(dataset, aes(x = weight)) +
geom_histogram(aes( y = after_stat(density)), color = "black", fill  = "white") +
geom_density()
ggplot(dataset, aes(x = weight)) +
geom_histogram(aes( y = after_stat(density)), color = "black", fill  = "white") +
geom_density( fill = "red")
ggplot(dataset, aes(x = weight)) +
geom_histogram(aes( y = after_stat(density)), color = "black", fill  = "white") +
geom_density( fill = "blue")
ggplot(dataset, aes(x = weight)) +
geom_histogram(aes( y = after_stat(density)), color = "black", fill  = "white") +
geom_density( fill = "blue", alpha = .2)
ggplot(dataset, aes(x = weight)) +
geom_histogram( color = "black", fill  = "white")
ggplot(dataset, aes(x = weight)) +
geom_histogram( color = "darkblue", fill  = "lightblue")
